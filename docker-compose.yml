# Development docker-compose with hot-reload
services:
  db:
    image: postgres:15-alpine
    container_name: go_api_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: go_api
    # No ports exposed to host - only accessible within Docker network
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - go_api_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development  # Use development stage
    container_name: go_api_app
    environment:
      PORT: 8080
      DB_HOST: db  # Use Docker service name
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: go_api
      JWT_SECRET: ${JWT_SECRET:-super-secret-jwt-key-change-in-production}
      JWT_TTL_HOURS: 24
      ENV: development
      LOG_LEVEL: ${LOG_LEVEL:-info}  # debug, info, warn, error
    ports:
      - "8080:8080"
    volumes:
      # Mount source code for hot-reload in development
      - ./:/app
      - /app/tmp  # Exclude tmp directory
    depends_on:
      db:
        condition: service_healthy
    networks:
      - go_api_network
    restart: unless-stopped

networks:
  go_api_network:
    driver: bridge

volumes:
  postgres_data:

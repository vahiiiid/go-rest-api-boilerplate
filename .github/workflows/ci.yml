name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

permissions:
  contents: read
  actions: read

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.24']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Install swag
      run: go install github.com/swaggo/swag/cmd/swag@latest

    - name: Generate Swagger docs
      run: swag init -g ./cmd/server/main.go -o ./api/docs

    - name: Run go vet
      run: go vet ./...

    - name: Run tests
      run: |
        # Run all tests (unit, integration, e2e - anywhere in the project)
        # Skip server integration tests that require running database
        SKIP_INTEGRATION_TESTS=1 go test ./... -v -race -coverprofile=coverage.out -covermode=atomic
        
        # Show coverage summary
        echo ""
        echo "=== Test Coverage Summary ==="
        go tool cover -func=coverage.out | tail -n 1

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.out
        flags: tests
        name: codecov-umbrella

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Install swag
      run: go install github.com/swaggo/swag/cmd/swag@latest

    - name: Generate Swagger docs
      run: swag init -g ./cmd/server/main.go -o ./api/docs

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=5m

  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Install swag
      run: go install github.com/swaggo/swag/cmd/swag@latest

    - name: Generate Swagger docs
      run: swag init -g ./cmd/server/main.go -o ./api/docs

    - name: Build
      run: go build -v ./cmd/server

    - name: Check go mod tidy
      run: |
        go mod tidy
        git diff --exit-code go.mod go.sum

